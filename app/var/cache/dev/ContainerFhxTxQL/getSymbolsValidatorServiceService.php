<?php

namespace ContainerFhxTxQL;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getSymbolsValidatorServiceService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private 'symbols_validator_service' shared autowired service.
     *
     * @return \App\Application\v1\Validator\Constraints\IsValidSymbolValidator
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/validator/ConstraintValidatorInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/validator/ConstraintValidator.php';
        include_once \dirname(__DIR__, 4).'/src/Application/v1/Validator/Constraints/IsValidSymbolValidator.php';
        include_once \dirname(__DIR__, 4).'/src/Application/v1/Service/RetrieveValidSymbolsService.php';

        return $container->privates['symbols_validator_service'] = new \App\Application\v1\Validator\Constraints\IsValidSymbolValidator(new \App\Application\v1\Service\RetrieveValidSymbolsService(($container->privates['http_client.uri_template'] ?? $container->load('getHttpClient_UriTemplateService')), ($container->services['cache.app'] ?? $container->load('getCache_AppService')), ($container->privates['monolog.logger'] ?? $container->load('getMonolog_LoggerService'))));
    }
}
